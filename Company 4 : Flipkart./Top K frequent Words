class Solution {
    public List<String> topKFrequent(String[] words, int k) {
       HashMap<String,Integer> map=new HashMap<>();
        for(int i=0;i<words.length;i++){
            if(map.containsKey(words[i])){
                map.put(words[i],map.get(words[i])+1);
            }else{
                map.put(words[i],1);
            }
        }
        PriorityQueue<String> pq=new PriorityQueue<>(new Comparator<String> (){
            public int compare(String a,String b){
                if(map.get(a)==map.get(b)){
                    return a.compareTo(b);
                }
                return map.get(b)-map.get(a);
            }
        });
        pq.addAll(map.keySet());
        ArrayList<String> list=new ArrayList<>();
        int i=0;
        while(i<k){
            list.add(pq.poll());
            i++;
        }
        return list;
    }
}
